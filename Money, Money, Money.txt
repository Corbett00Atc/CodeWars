/*
  Mr. Scrooge has a sum of money 'P' that wants to invest, 
  and he wants to know how many years 'Y' this sum 
  has to be kept in the bank in order for this sum 
  of money to amount to 'D'.
  
  The sum is kept for 'Y' years in the bank where 
  interest 'I' is paid yearly, and the new sum is 
  re-invested yearly after paying tax 'T'
  
  Note that the principal is not taxed but only 
  the year's accrued interest
  
  Example:
  
    Let P be the Principal = 1000.00      
    Let I be the Interest Rate = 0.05      
    Let T be the Tax Rate = 0.18      
    Let D be the Desired Sum = 1100.00
  
  
  After 1st Year -->
    P = 1041.00
  After 2nd Year -->
    P = 1083.86
  After 3rd Year -->
    P = 1128.30
  Thus Mr. Scrooge has to wait for 3 years for the initial 
  pricipal to ammount to the desired sum.
  
  Your task is to complete the method provided and return the number of 
  years 'Y' as a whole in order for Mr. Scrooge to get the desired sum.
  
  Assumptions : Assume that Desired Principal 'D' is always greater than the 
  initial principal, however it is best to take into consideration that if 
  the Desired Principal 'D' is equal to Principal 'P' this should return 0 Years.
*/

using System;

public class Kata
{
  public static int CalculateYears(double principal, double interest,  double tax, double desiredPrincipal)
        {
          /* 
            Yearly calculations
            P = 1000                                             // initial prinicple
            1000 (P) * .05 (I) = 50                              // find yearly gain
            50 (interest earned) * .82 (inverse of T) = 41       // find interest after tax
            1000 (P) + 41 (interest earned after tax) = 1041.00  // total after first year
          */   
          
          // iterations find yearly increase until original principal reaches desiredPrincipal
          int years = 0;
          while ( principal < desiredPrincipal)
          {
            principal += (principal * interest) * (1 - tax);
            years++;
          }
          
          return years;
        }
}