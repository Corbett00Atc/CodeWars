/*
  Given two arrays of strings a1 and a2 return a sorted array r in 
  lexicographical order of the strings of a1 which are substrings 
  of strings of a2.
  
  #Example 1: a1 = ["arp", "live", "strong"]
  
  a2 = ["lively", "alive", "harp", "sharp", "armstrong"]
  
  returns ["arp", "live", "strong"]
  
  #Example 2: a1 = ["tarp", "mice", "bull"]
  
  a2 = ["lively", "alive", "harp", "sharp", "armstrong"]

  returns []
*/

using System.Linq;
using System.Collections.Generic;

class WhichAreIn
        {
            public static string[] inArray(string[] array1, string[] array2)
            {
                List<string> newWords = new List<string>();
                
                foreach (string s in array1) 
                {
                  foreach (string w in array2)
                  {
                    if (w.Contains(s))
                    {
                      if (!newWords.Contains(s)) { newWords.Add(s); }
                    }
                  }
                } 
                
                newWords.Sort();
                string[] stringArray = newWords.ToArray();
                
                return stringArray;
            }
        }