/*
  An Arithmetic Progression is defined as one in which there is a constant 
  difference between the consecutive terms of a given series of numbers. 
  You are provided with consecutive elements of an Arithmetic Progression. 
  There is however one hitch: exactly one term from the original series is 
  missing from the set of numbers which have been given to you. The rest of 
  the given series is the same as the original AP. Find the missing term.
  
  You have to write the function findMissing(list), list will always be 
  at least 3 numbers. The missing term will never be the first or last one.
  
  Example :
  Kata.FindMissing(new List<int> {1, 3, 5, 9, 11}) => 7
*/

using System.Collections.Generic;
using System.Linq;

public class Kata
{
  public static int FindMissing(List<int> list)
  {
    int patternStep = (list[list.Count - 1] - list[0]) / list.Count;
    
    for(int n = 0; n < list.Count - 1; n++)
    {
      if (list[n] + patternStep != list[n + 1])
        return list[n] + patternStep;
    } 
    
    return 0;
  }
}