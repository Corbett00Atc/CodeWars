/*
  Write a function that, given a depth (n), 
  returns a single-dimensional array representing Pascal's 
  Triangle to the n-th level.
  
  For example:
  
  Kata.PascalsTriangle(4) == new List<int> {1,1,1,1,2,1,1,3,3,1}
*/

using System;
using System.Collections.Generic;

public static class Kata
{
  public static List<int> PascalsTriangle(int n)  
  {
      List<List<int>> pt = new List<List<int>>();
      List<int> formatted = new List<int>();
      
      for (int i = 0; i < n; i++)
      {
          pt.Add(new List<int>());
          for (int i2 = 0; i2 <= i; i2++)
          {
              // generates values
              if (i < 2  || i2 == 0 || i2 == i)
                pt[i].Add(1);
              else
                pt[i].Add(pt[i - 1][i2 - 1] + pt[i - 1][i2]);
               
               // add values to return value list
               formatted.Add(pt[i][i2]);
          }
      }
            
      return formatted;
  }
}

